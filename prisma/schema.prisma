// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  uuid          String   @unique @default(uuid())
  name          String   @unique
  email         String   @unique
  password      String
  phone         String?
  online         Boolean @default(false)
  img           String?  @db.Text
  refresh_token String? @db.Text
  last_online   DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact      Contact[]
  chat      Chat[]
  message      Message[]
  privateChat    PrivateChat[]
}

model Contact {
  id         Int     @id @default(autoincrement())
  uuid       String  @unique @default(uuid())
  contact_id String @unique
  user        String
  contact    User @relation(fields: [contact_id], references: [uuid])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  privateChat    PrivateChat[]
}

model Chat {
   id         Int     @id @default(autoincrement())
  uuid       String  @unique @default(uuid())
  user_id     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User @relation(fields: [user_id], references: [uuid])
  message Message[]
  groupChat   GroupChat[]
privateChat PrivateChat[]
}

model Message {
   id         Int     @id @default(autoincrement())
  uuid       String  @unique @default(uuid())
   user_id  String
  chat_id    String  
  message    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chat       Chat @relation(fields: [chat_id], references: [uuid])
  user      User @relation(fields: [user_id], references: [uuid])
}
model GroupChat {
id         Int     @id @default(autoincrement())
  uuid       String  @unique @default(uuid())
  chat_id   String
  member Json?
  group_name   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chat       Chat @relation(fields: [chat_id], references: [uuid])
}
model PrivateChat{
  id         Int     @id @default(autoincrement())
  uuid       String  @unique @default(uuid())
  chat_id String
  contact_id  String
  user_id   String   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chat       Chat @relation(fields: [chat_id], references: [uuid])
  user      User @relation(fields: [user_id], references: [uuid])
  contact      Contact @relation(fields: [contact_id], references: [uuid])
}


model Otp {
id         Int     @id @default(autoincrement())
  email   String @unique
  otp  String
  expiredAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



